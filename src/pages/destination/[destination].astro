---
import Layout from '$layouts/Layout.astro';
import NumberedTitle from '$components/NumberedTitle.astro';
import DestinationMeta from '$components/DestinationMeta.astro';
import TabBarItem from '$components/TabBarItem.astro';
import { getDataForRoute, generateUrl } from '$utils/navigation';
import { DESTINATION_ROUTES } from '$constants/routes';

export function getStaticPaths() {
  const pages = DESTINATION_ROUTES.map((route) => ({
    destination: route,
    props: getDataForRoute('destination', route),
  }));
  return pages.map(({ destination, props }) => ({ params: { destination }, props }));
}
const { destination } = Astro.params;
const props = Astro.props as App.Destination;
---

<Layout title={`Space Tourism | ${props.name}`}>
  <main id="main-content" class="grid-container">
    <NumberedTitle label="Pick your destination" number="01" />
    <img src={props.images.webp} alt={props.name} />
    <div class="informations grid">
      <nav class="tabs flex">
        {
          DESTINATION_ROUTES.map((route) => (
            <TabBarItem active={route === destination} href={generateUrl('destination', route)} name={route} />
          ))
        }
      </nav>
      <div class="presentation space-y">
        <h2 class="uppercase text-light fs-2xl ff-serif">{props.name}</h2>
        <p>{props.description}</p>
      </div>
      <div class="details flex">
        <DestinationMeta title="AVG. DISTANCE" content={props.distance} />
        <DestinationMeta title="Est. travel time" content={props.distance} />
      </div>
    </div>
  </main>
</Layout>

<style>
  .grid-container {
    grid-template-areas:
      'numbered-title'
      'image'
      'informations';
  }

  .grid-container > img {
    grid-area: image;
    max-width: 60%;
    place-self: center;
  }
  .informations {
    grid-area: informations;
    --grid-gap: 2rem;
    margin-top: 2rem;
    place-items: center;
  }
  .tabs {
    --flex-gap: clamp(1.5rem, calc(0.44rem + 4.53vw), 2.25rem);
  }
  .presentation {
    --space-y: clamp(0rem, calc(-0.64rem + 2.74vw), 1rem);
    padding-bottom: clamp(2rem, calc(1.04rem + 4.1vw), 3.5rem);
    border-bottom: 1px solid hsl(var(--clr-divider));
  }

  .details {
    flex-direction: column;
    --flex-gap: 2rem;
  }

  @media (--screen-tablet) {
    .grid-container > img {
      max-width: min(445px, 45vw);
    }
    .informations {
      margin-top: 3.5rem;
    }
    .details {
      flex-direction: row;
      --flex-gap: 4.5rem;
    }
  }

  @media (--screen-desktop) {
    .grid-container {
      grid-template-rows: min-content 1fr;
      grid-template-areas:
        'numbered-title .'
        'image informations';
    }
    .grid-container > img {
      place-self: end;
    }
    .informations {
      place-self: end;
      place-items: start;
      margin-top: 0;
    }
  }
</style>

<style is:global>
  body {
    background-image: url('/assets/destination/background-destination-mobile.jpg');
    background-position: center;
  }
  @media (--screen-tablet) {
    body {
      background-image: url('/assets/destination/background-destination-tablet.jpg');
    }
  }
  @media (--screen-desktop) {
    body {
      background-image: url('/assets/destination/background-destination-desktop.jpg');
    }
  }
</style>
