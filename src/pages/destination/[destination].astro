---
import Layout from '$layouts/Layout.astro';
import NumberedTitle from '$components/NumberedTitle.astro';
import DestinationMeta from '$components/DestinationMeta.astro';
import { getDataForRoute, Param } from '$utils/navigation';
import { DESTINATION_TABS } from '$constants/routes';

export function getStaticPaths() {
  const pages: { destination: Param<'destination'>; props: any }[] = [
    { destination: 'moon', props: getDataForRoute('destination', 'moon') },
    { destination: 'mars', props: getDataForRoute('destination', 'mars') },
    { destination: 'europa', props: getDataForRoute('destination', 'europa') },
    { destination: 'titan', props: getDataForRoute('destination', 'titan') },
  ];
  return pages.map(({ destination, props }) => {
    return { params: { destination }, props };
  });
}
const { destination } = Astro.params;
const props = Astro.props as App.Destination;
---

<Layout title="Frontend Mentor | Destination">
  <div class="grid-container">
    <div class="container-left grid">
      <NumberedTitle label="Pick your destination" number="01" />
      <img src={props.images.webp} alt={props.name} />
    </div>
    <div class="container-right grid">
      <nav class="tabs flex">
        {
          DESTINATION_TABS.map((tab) => (
            <a
              class:list={[
                'underline-indicator uppercase text-muted ls-wider ff-condensed',
                { active: tab.name === destination },
              ]}
              href={tab.href}>
              {tab.name}
            </a>
          ))
        }
      </nav>
      <div class="presentation">
        <h2 class="uppercase text-light fs-2xl ff-serif">{props.name}</h2>
        <p>{props.description}</p>
      </div>
      <div class="details flex">
        <DestinationMeta title="AVG. DISTANCE" content={props.distance} />
        <DestinationMeta title="Est. travel time" content={props.distance} />
      </div>
    </div>
  </div>
</Layout>

<style is:global>
  body {
    background-image: url('/assets/destination/background-destination-mobile.jpg');
    background-position: center;
  }
  @media (--screen-tablet) {
    body {
      background-image: url('/assets/destination/background-destination-tablet.jpg');
    }
  }
  @media (--screen-desktop) {
    body {
      background-image: url('/assets/destination/background-destination-desktop.jpg');
    }
  }
</style>

<style>
  .grid-container {
    --container-gap: 1.5rem;
  }

  .container-left {
    --grid-gap: 1.5rem;
    text-align: center;
  }
  .container-left img {
    justify-self: center;
    max-width: 60%;
  }

  .container-right {
    --grid-gap: 0rem;
    justify-items: center;
    text-align: center;
  }
  .tabs {
    --flex-gap: 1.5rem;
  }
  .tabs a {
    font-size: 0.875rem;
    padding-bottom: 0.75rem;
  }
  .presentation {
    padding-block: 1.25rem 2rem;
    border-bottom: 1px solid hsl(var(--clr-divider));
  }
  .presentation p {
    max-width: 62ch;
  }
  .details {
    --flex-gap: 2rem;
    flex-direction: column;
    margin-top: 2rem;
  }

  @media (--screen-tablet) {
    .grid-container {
      --container-gap: 3.75rem;
    }

    .container-left {
      --grid-gap: 3.75rem;
      text-align: left;
    }
    .tabs {
      --flex-gap: 2.25rem;
    }
    .tabs a {
      font-size: 1rem;
    }

    .presentation {
      padding-block: 2rem 3rem;
    }

    .details {
      --flex-gap: 4.5rem;
      flex-direction: row;
    }
  }

  @media (--screen-desktop) {
    .grid-container {
      --container-gap: 9rem;
    }

    .container-left {
      --grid-gap: 6rem;
    }
    .container-left img {
      max-width: 90%;
      place-self: end;
    }

    .container-right {
      place-self: end;
      justify-items: start;
      text-align: left;
    }
    .presentation {
      padding-block: 2.25rem 3.375rem;
    }
    .presentation p {
      max-width: 44ch;
    }
  }
</style>
